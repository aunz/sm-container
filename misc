curl --data "a=1&b=2" localhost:8080/invocations

curl -F 'data=@/data.csv' localhost:5000/invocations

docker run -v $(pwd)/test_dir:/opt/ml -p 8080:8080 --rm ${image} serve


docker run -v C:/Users/K/Desktop/sm/test:/opt/ml -p 8080:8080 --rm sm:0.0.1 serve



docker run -e MYVAR1 --env MYVAR2=foo --env-file ./env.list ubuntu bash

docker run -e PP=111 -v C:/Users/K/Desktop/sm/test:/opt/ml -p 8080:8080 --rm sm:0.0.1 serve

docker run -it -v C:/Users/K/Desktop/sm/program:/opt/program -p 5000:5000 -e FLASK_ENV=development t2 flask run


docker run -it -v C:/Users/K/Desktop/sm/program:/opt/program -p 5000:5000 -e FLASK_ENV=development -e FLASK_APP=/opt/program/app t2 flask run

docker run -it -v C:/Users/K/Desktop/sm/program:/opt/program -v C:/Users/K/Desktop/sm/test:/opt/ml -p 5000:5000 -e FLASK_ENV=development -e FLASK_APP=/opt/program/app t2 flask run


docker build -t sm-base --compress .

docker build -t sm-base2 -f Dockerfile2

docker run --name t1 -e PP=111 -v C:/Users/K/Desktop/sm-container/local-test:/opt/ml -v C:/Users/K/Desktop/sm-container/program:/opt/program -p 8080:8080 --rm sm-base serve
docker run -e PP=111 -v C:/Users/K/Desktop/sm-container/local-test:/opt/ml -p 80:80 --rm sm-base serve


curl localhost:5000/ping
curl --data "aaa" localhost:5000/invocations


curl localhost:8080/ping
curl --data "aaa" localhost:8080/invocations


docker save -o <path for generated tar file> <image name>
docker load -i <path to image tar file>

docker save sm-base | gzip > ../sm-base.tar.gz

docker run -it --name t1 -v C:/Users/K/Desktop/sm-container/program:/opt/program -v C:/Users/K/Desktop/sm-container/local-test:/opt/ml -p 8080:8080 -e FLASK_ENV=development -e FLASK_APP=/opt/program/wsgi -e FLASK_RUN_PORT=8080 sm-base flask run --host=0.0.0.0


flask run --host=0.0.0.0 --no-reload

docker run -it --name t1 -v C:/Users/K/Desktop/sm-container/program:/opt/program -v C:/Users/K/Desktop/sm-container/local-test:/opt/ml -p 8080:8080  -e FLASK_ENV=development sm-base serve
docker run -it --name t1 -v C:/Users/K/Desktop/sm-container/local-test:/opt/ml -p 8080:8080  sm-base serve
